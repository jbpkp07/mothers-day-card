"use strict";

let slideCurrentIndex = 0;

const slideSelectorRoot = "div.slide";

const slideSelectors = [

    `${slideSelectorRoot}.supergirl`,
    `${slideSelectorRoot}.chair`,
    `${slideSelectorRoot}.knjr`,
    `${slideSelectorRoot}.grandma`,
    `${slideSelectorRoot}.grandpa`,
    `${slideSelectorRoot}.park`,
    `${slideSelectorRoot}.burp`,
    `${slideSelectorRoot}.milk`,
];

const nextSlideBtnElement = $("#nextBtn");

function slideFadeIn(slideSelector) {

    return new Promise((resolve) => {

        const slideElement = $(slideSelector);

        slideElement
            .fadeTo(0, 0.0)
            .promise()
            .then(() => slideElement.fadeTo(1000, 1.0).promise())
            .then(resolve);
    });
}

function slideFadeOut(slideSelector) {

    return new Promise((resolve) => {

        const slideElement = $(slideSelector);

        slideElement
            .fadeTo(500, 0.0)
            .promise()
            .then(() => slideElement.hide().promise())
            .then(resolve);
    });
}

function incrementSlide() {

    if (slideCurrentIndex === slideSelectors.length - 1) {

        slideCurrentIndex = 0;
    }
    else {

        slideCurrentIndex++;
    }
}

function setNextBtnText() {

    if (slideCurrentIndex < slideSelectors.length - 1) {

        nextSlideBtnElement.text("Next >>>");
    }
    else {

        nextSlideBtnElement.text("Start Over >>>");
    }
}

function nextSlide() {

    setNextBtnText();

    const currentSlideSelector = slideSelectors[slideCurrentIndex];

    slideFadeIn(currentSlideSelector)
        .then(() => new Promise((resolve) => nextSlideBtnElement.one("click", resolve)))
        .then(() => slideFadeOut(currentSlideSelector))
        .then(() => { 

            incrementSlide();

            nextSlide();
        });
}

$(document).ready(() => {

    nextSlide();
});
